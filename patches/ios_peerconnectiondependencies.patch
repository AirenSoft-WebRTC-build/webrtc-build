diff --git a/sdk/BUILD.gn b/sdk/BUILD.gn
index 358338f447..42b5fd0f05 100644
--- a/sdk/BUILD.gn
+++ b/sdk/BUILD.gn
@@ -914,6 +914,8 @@ if (is_ios || is_mac) {
         "objc/api/peerconnection/RTCPeerConnection+Stats.mm",
         "objc/api/peerconnection/RTCPeerConnection.h",
         "objc/api/peerconnection/RTCPeerConnection.mm",
+        "objc/api/peerconnection/RTCPeerConnectionDependencies.h",
+        "objc/api/peerconnection/RTCPeerConnectionDependencies.mm",
         "objc/api/peerconnection/RTCPeerConnectionFactory+Native.h",
         "objc/api/peerconnection/RTCPeerConnectionFactory+Private.h",
         "objc/api/peerconnection/RTCPeerConnectionFactory.h",
@@ -956,6 +958,7 @@ if (is_ios || is_mac) {
         "objc/api/peerconnection/RTCSessionDescription+Private.h",
         "objc/api/peerconnection/RTCSessionDescription.h",
         "objc/api/peerconnection/RTCSessionDescription.mm",
+        "objc/api/peerconnection/RTCSSLCertificateVerifier.h",
         "objc/api/peerconnection/RTCStatisticsReport+Private.h",
         "objc/api/peerconnection/RTCStatisticsReport.h",
         "objc/api/peerconnection/RTCStatisticsReport.mm",
@@ -1270,6 +1273,7 @@ if (is_ios || is_mac) {
           "objc/api/peerconnection/RTCMetrics.h",
           "objc/api/peerconnection/RTCMetricsSampleInfo.h",
           "objc/api/peerconnection/RTCPeerConnection.h",
+          "objc/api/peerconnection/RTCPeerConnectionDependencies.h",
           "objc/api/peerconnection/RTCPeerConnectionFactory.h",
           "objc/api/peerconnection/RTCPeerConnectionFactoryOptions.h",
           "objc/api/peerconnection/RTCRtcpParameters.h",
@@ -1282,6 +1286,7 @@ if (is_ios || is_mac) {
           "objc/api/peerconnection/RTCRtpTransceiver.h",
           "objc/api/peerconnection/RTCDtmfSender.h",
           "objc/api/peerconnection/RTCSSLAdapter.h",
+          "objc/api/peerconnection/RTCSSLCertificateVerifier.h",
           "objc/api/peerconnection/RTCSessionDescription.h",
           "objc/api/peerconnection/RTCStatisticsReport.h",
           "objc/api/peerconnection/RTCTracing.h",
@@ -1384,6 +1389,7 @@ if (is_ios || is_mac) {
           "objc/api/peerconnection/RTCMetrics.h",
           "objc/api/peerconnection/RTCMetricsSampleInfo.h",
           "objc/api/peerconnection/RTCPeerConnection.h",
+          "objc/api/peerconnection/RTCPeerConnectionDependencies.h",
           "objc/api/peerconnection/RTCPeerConnectionFactory.h",
           "objc/api/peerconnection/RTCPeerConnectionFactoryOptions.h",
           "objc/api/peerconnection/RTCRtcpParameters.h",
@@ -1395,6 +1401,7 @@ if (is_ios || is_mac) {
           "objc/api/peerconnection/RTCRtpSender.h",
           "objc/api/peerconnection/RTCRtpTransceiver.h",
           "objc/api/peerconnection/RTCSSLAdapter.h",
+          "objc/api/peerconnection/RTCSSLCertificateVerifier.h",
           "objc/api/peerconnection/RTCSessionDescription.h",
           "objc/api/peerconnection/RTCTracing.h",
           "objc/api/peerconnection/RTCVideoSource.h",
diff --git a/sdk/objc/api/peerconnection/RTCPeerConnection+Private.h b/sdk/objc/api/peerconnection/RTCPeerConnection+Private.h
index 558cf07dce..2f530b5d22 100644
--- a/sdk/objc/api/peerconnection/RTCPeerConnection+Private.h
+++ b/sdk/objc/api/peerconnection/RTCPeerConnection+Private.h
@@ -12,6 +12,8 @@
 
 #include "api/peer_connection_interface.h"
 
+@class RTC_OBJC_TYPE (RTCPeerConnectionDependencies);
+
 NS_ASSUME_NONNULL_BEGIN
 
 namespace webrtc {
@@ -83,6 +85,12 @@ class PeerConnectionDelegateAdapter : public PeerConnectionObserver {
                                 delegate:
                                     (nullable id<RTC_OBJC_TYPE(RTCPeerConnectionDelegate)>)delegate;
 
+- (nullable instancetype)initWithFactory:(RTC_OBJC_TYPE(RTCPeerConnectionFactory) *)factory
+                           configuration:(RTC_OBJC_TYPE(RTCConfiguration) *)configuration
+                             constraints:(RTC_OBJC_TYPE(RTCMediaConstraints) *)constraints
+                            dependencies:(RTC_OBJC_TYPE(RTCPeerConnectionDependencies) *)dependencies
+                                delegate:(nullable id<RTC_OBJC_TYPE(RTCPeerConnectionDelegate)>)delegate;
+
 /** Initialize an RTCPeerConnection with a configuration, constraints,
  *  delegate and PeerConnectionDependencies.
  */
diff --git a/sdk/objc/api/peerconnection/RTCPeerConnection.mm b/sdk/objc/api/peerconnection/RTCPeerConnection.mm
index 05fe581d08..eba5520686 100644
--- a/sdk/objc/api/peerconnection/RTCPeerConnection.mm
+++ b/sdk/objc/api/peerconnection/RTCPeerConnection.mm
@@ -22,6 +22,8 @@
 #import "RTCRtpSender+Private.h"
 #import "RTCRtpTransceiver+Private.h"
 #import "RTCSessionDescription+Private.h"
+#import "RTCPeerConnectionDependencies.h"
+#import "RTCSSLCertificateVerifier.h"
 #import "base/RTCLogging.h"
 #import "helpers/NSString+StdString.h"
 
@@ -33,6 +35,7 @@
 #include "api/set_remote_description_observer_interface.h"
 #include "rtc_base/checks.h"
 #include "rtc_base/numerics/safe_conversions.h"
+#include "rtc_base/ssl_certificate.h"
 
 NSString *const kRTCPeerConnectionErrorDomain = @"org.webrtc.RTC_OBJC_TYPE(RTCPeerConnection)";
 int const kRTCPeerConnnectionSessionDescriptionError = -1;
@@ -300,6 +303,30 @@ void OnFailure(RTCError error) override {
   }
 }
 
+class SSLCertificateVerifierAdapter : public rtc::SSLCertificateVerifier {
+
+ public:
+  SSLCertificateVerifierAdapter(bool insecure, id<RTCSSLCertificateVerifier> verifier) :
+    insecure_(insecure), verifier_(verifier) {}
+
+  bool Verify(const rtc::SSLCertificate& certificate) override {
+    NSLog(@"# SSLCertificateVerifierAdapter.Verify");
+    if (insecure_) {
+      return true;
+    }
+    if (verifier_ == nil) {
+      return false;
+    }
+
+    rtc::Buffer buffer;
+    certificate.ToDER(&buffer);
+    NSData *data = [[NSData alloc] initWithBytesNoCopy:&buffer length: buffer.size() freeWhenDone: NO];
+    return [verifier_ verifyCertificate:data] ? true : false;
+  }
+
+  private:
+    bool insecure_;
+    __weak id<RTCSSLCertificateVerifier> verifier_;
+
+};
+
 }  // namespace webrtc
 
 @implementation RTC_OBJC_TYPE (RTCPeerConnection) {
@@ -328,6 +355,28 @@ - (nullable instancetype)initWithFactory:(RTC_OBJC_TYPE(RTCPeerConnectionFactory
                            delegate:delegate];
 }
 
+- (nullable instancetype)
+    initWithFactory:(RTC_OBJC_TYPE(RTCPeerConnectionFactory) *)factory
+      configuration:(RTC_OBJC_TYPE(RTCConfiguration) *)configuration
+        constraints:(RTC_OBJC_TYPE(RTCMediaConstraints) *)constraints
+       dependencies:(RTC_OBJC_TYPE(RTCPeerConnectionDependencies) *)dependencies
+           delegate:(nullable id<RTC_OBJC_TYPE(RTCPeerConnectionDelegate)>)delegate {
+  NSParameterAssert(factory);
+  std::unique_ptr<webrtc::PeerConnectionDependencies> nativeDependencies =
+    std::make_unique<webrtc::PeerConnectionDependencies>(nullptr);
+  if (dependencies.sslCertificateVerifier != nil) {
+    std::unique_ptr<webrtc::SSLCertificateVerifierAdapter> verifierAdapter = 
+      std::make_unique<webrtc::SSLCertificateVerifierAdapter>(dependencies.allowsInsecureCertificate,
+                                                              dependencies.sslCertificateVerifier);
+    nativeDependencies->tls_cert_verifier = std::move(verifierAdapter);
+  }
+  return [self initWithDependencies:factory
+                      configuration:configuration
+                        constraints:constraints
+                       dependencies:std::move(nativeDependencies)
+                           delegate:delegate];
+}
+
 - (nullable instancetype)
     initWithDependencies:(RTC_OBJC_TYPE(RTCPeerConnectionFactory) *)factory
            configuration:(RTC_OBJC_TYPE(RTCConfiguration) *)configuration
diff --git a/sdk/objc/api/peerconnection/RTCPeerConnectionDependencies.h b/sdk/objc/api/peerconnection/RTCPeerConnectionDependencies.h
new file mode 100644
index 0000000000..e919240e42
--- /dev/null
+++ b/sdk/objc/api/peerconnection/RTCPeerConnectionDependencies.h
@@ -0,0 +1,19 @@
+#import <Foundation/Foundation.h>
+
+#import "RTCMacros.h"
+
+@protocol RTC_OBJC_TYPE(RTCSSLCertificateVerifier);
+
+NS_ASSUME_NONNULL_BEGIN
+
+RTC_OBJC_EXPORT
+@interface RTC_OBJC_TYPE (RTCPeerConnectionDependencies) : NSObject
+
+@property (readwrite, nonatomic, nullable) id<RTC_OBJC_TYPE(RTCSSLCertificateVerifier)> sslCertificateVerifier;
+@property (readwrite, nonatomic) BOOL allowsInsecureCertificate;
+
+- (instancetype)init;
+
+@end
+
+NS_ASSUME_NONNULL_END
diff --git a/sdk/objc/api/peerconnection/RTCPeerConnectionDependencies.mm b/sdk/objc/api/peerconnection/RTCPeerConnectionDependencies.mm
new file mode 100644
index 0000000000..1e970138a5
--- /dev/null
+++ b/sdk/objc/api/peerconnection/RTCPeerConnectionDependencies.mm
@@ -0,0 +1,14 @@
+#import "RTCPeerConnectionDependencies.h"
+
+@implementation RTC_OBJC_TYPE (RTCPeerConnectionDependencies)
+
+- (instancetype)init
+{
+    if (self = [super init]) {
+        self.allowsInsecureCertificate = false;
+        self.sslCertificateVerifier = nil;
+    }
+    return self;
+}
+
+@end
diff --git a/sdk/objc/api/peerconnection/RTCPeerConnectionFactory.h b/sdk/objc/api/peerconnection/RTCPeerConnectionFactory.h
index 2b0489885f..516c30e8df 100644
--- a/sdk/objc/api/peerconnection/RTCPeerConnectionFactory.h
+++ b/sdk/objc/api/peerconnection/RTCPeerConnectionFactory.h
@@ -22,6 +22,7 @@ NS_ASSUME_NONNULL_BEGIN
 @class RTC_OBJC_TYPE(RTCPeerConnection);
 @class RTC_OBJC_TYPE(RTCVideoSource);
 @class RTC_OBJC_TYPE(RTCVideoTrack);
+@class RTC_OBJC_TYPE (RTCPeerConnectionDependencies);
 @class RTC_OBJC_TYPE(RTCPeerConnectionFactoryOptions);
 @protocol RTC_OBJC_TYPE
 (RTCPeerConnectionDelegate);
@@ -75,6 +76,12 @@ RTC_OBJC_EXPORT
                         constraints:(RTC_OBJC_TYPE(RTCMediaConstraints) *)constraints
                            delegate:(nullable id<RTC_OBJC_TYPE(RTCPeerConnectionDelegate)>)delegate;
 
+- (RTC_OBJC_TYPE(RTCPeerConnection) *)
+    peerConnectionWithConfiguration:(RTC_OBJC_TYPE(RTCConfiguration) *)configuration
+                        constraints:(RTC_OBJC_TYPE(RTCMediaConstraints) *)constraints
+                       dependencies:(RTC_OBJC_TYPE(RTCPeerConnectionDependencies) *)dependencies
+                           delegate:(nullable id<RTC_OBJC_TYPE(RTCPeerConnectionDelegate)>)delegate;
+
 /** Set the options to be used for subsequently created RTCPeerConnections */
 - (void)setOptions:(nonnull RTC_OBJC_TYPE(RTCPeerConnectionFactoryOptions) *)options;
 
diff --git a/sdk/objc/api/peerconnection/RTCPeerConnectionFactory.mm b/sdk/objc/api/peerconnection/RTCPeerConnectionFactory.mm
index 2f324f7289..d089921223 100644
--- a/sdk/objc/api/peerconnection/RTCPeerConnectionFactory.mm
+++ b/sdk/objc/api/peerconnection/RTCPeerConnectionFactory.mm
@@ -279,6 +279,18 @@ - (instancetype)initWithNativeAudioEncoderFactory:
                                                                delegate:delegate];
 }
 
+- (RTC_OBJC_TYPE(RTCPeerConnection) *)
+    peerConnectionWithConfiguration:(RTC_OBJC_TYPE(RTCConfiguration) *)configuration
+        constraints:(RTC_OBJC_TYPE(RTCMediaConstraints) *)constraints
+        dependencies:(RTC_OBJC_TYPE(RTCPeerConnectionDependencies) *)dependencies
+        delegate:(nullable id<RTC_OBJC_TYPE(RTCPeerConnectionDelegate)>)delegate {
+    return [[RTC_OBJC_TYPE(RTCPeerConnection) alloc] initWithFactory:self
+                                                       configuration:configuration
+                                                         constraints:constraints
+                                                        dependencies:dependencies
+                                                            delegate:delegate];
+}
+
 - (void)setOptions:(nonnull RTC_OBJC_TYPE(RTCPeerConnectionFactoryOptions) *)options {
   RTC_DCHECK(options != nil);
   _nativeFactory->SetOptions(options.nativeOptions);
diff --git a/sdk/objc/api/peerconnection/RTCSSLCertificateVerifier.h b/sdk/objc/api/peerconnection/RTCSSLCertificateVerifier.h
new file mode 100644
index 0000000000..f4355d7cbe
--- /dev/null
+++ b/sdk/objc/api/peerconnection/RTCSSLCertificateVerifier.h
@@ -0,0 +1,14 @@
+#import <Foundation/Foundation.h>
+
+#import "RTCMacros.h"
+
+NS_ASSUME_NONNULL_BEGIN
+
+RTC_OBJC_EXPORT
+@protocol RTC_OBJC_TYPE (RTCSSLCertificateVerifier) <NSObject>
+
+- (BOOL)verifyCertificate:(NSData *)certificate;
+
+@end
+
+NS_ASSUME_NONNULL_END
