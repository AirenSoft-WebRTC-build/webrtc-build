name: build

on:
  push:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Disk Cleanup
      run: |
        Get-PSDrive
        # Cache 済み Docker Image の削除
        docker rmi $(docker images -q -a)
        # Android SDK の削除
        Remove-Item -Recurse -Force $Env:ANDROID_HOME
        Remove-Item -Recurse -Force $Env:ANDROID_NDK_HOME
        # JVM の削除
        Remove-Item -Recurse -Force $Env:JAVA_HOME_11_X64
        Remove-Item -Recurse -Force $Env:JAVA_HOME_8_X64
        Remove-Item -Recurse -Force $Env:JAVA_HOME_7_X64
        Get-PSDrive
    - run: .\build.windows.bat
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: webrtc.windows.zip
        path: _package\windows\webrtc.zip
  build-macos:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - run: ./build.macos.sh
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: webrtc.macos.tar.gz
        path: _package/macos/webrtc.tar.gz
  build-raspbian-buster_armv6:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - run: ./build.raspbian-buster_armv6.sh
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: webrtc.raspbian-buster_armv6.tar.gz
        path: _package/raspbian-buster_armv6/webrtc.tar.gz
  build-raspbian-buster_armv7:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - run: ./build.raspbian-buster_armv7.sh
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: webrtc.raspbian-buster_armv7.tar.gz
        path: _package/raspbian-buster_armv7/webrtc.tar.gz
  build-ubuntu-18_04_armv8:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - run: ./build.ubuntu-18.04_armv8.sh
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: webrtc.ubuntu-18.04_armv8.tar.gz
        path: _package/ubuntu-18.04_armv8/webrtc.tar.gz
  build-ubuntu-18_04_x86_64:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - run: ./build.ubuntu-18.04_x86_64.sh
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: webrtc.ubuntu-18.04_x86_64.tar.gz
        path: _package/ubuntu-18.04_x86_64/webrtc.tar.gz
  release:
    name: Release
    if: contains(github.ref, 'tags/m')
    needs:
      - build-windows
      - build-macos
      - build-raspbian-buster_armv6
      - build-raspbian-buster_armv7
      - build-ubuntu-18_04_armv8
      - build-ubuntu-18_04_x86_64
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Download windows
      uses: actions/download-artifact@v1
      with:
        name: webrtc.windows.zip
    - name: Download macos
      uses: actions/download-artifact@v1
      with:
        name: webrtc.macos.tar.gz
    - name: Download raspbian-buster_armv6
      uses: actions/download-artifact@v1
      with:
        name: webrtc.raspbian-buster_armv6.tar.gz
    - name: Download raspbian-buster_armv7
      uses: actions/download-artifact@v1
      with:
        name: webrtc.raspbian-buster_armv7.tar.gz
    - name: Download build-ubuntu-18.04_armv8
      uses: actions/download-artifact@v1
      with:
        name: webrtc.build-ubuntu-18.04_armv8.tar.gz
    - name: Download build-ubuntu-18.04_x86_64
      uses: actions/download-artifact@v1
      with:
        name: webrtc.build-ubuntu-18.04_x86_64.tar.gz
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload windows Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: webrtc.windows.zip/webrtc.zip
        asset_name: webrtc.windows.zip
        asset_content_type: application/zip
    - name: Upload macos Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: webrtc.macos.tar.gz/webrtc.tar.gz
        asset_name: webrtc.macos.zip
        asset_content_type: application/gzip
    - name: Upload raspbian-buster_armv6 Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: webrtc.raspbian-buster_armv6.tar.gz/webrtc.tar.gz
        asset_name: webrtc.raspbian-buster_armv6.zip
        asset_content_type: application/gzip
    - name: Upload raspbian-buster_armv7 Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: webrtc.raspbian-buster_armv7.tar.gz/webrtc.tar.gz
        asset_name: webrtc.raspbian-buster_armv7.zip
        asset_content_type: application/gzip
    - name: Upload ubuntu-18.04_armv8 Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: webrtc.ubuntu-18.04_armv8.tar.gz/webrtc.tar.gz
        asset_name: webrtc.ubuntu-18.04_armv8.zip
        asset_content_type: application/gzip
    - name: Upload ubuntu-18.04_x86_64 Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: webrtc.ubuntu-18.04_x86_64.tar.gz/webrtc.tar.gz
        asset_name: webrtc.ubuntu-18.04_x86_64.zip
        asset_content_type: application/gzip